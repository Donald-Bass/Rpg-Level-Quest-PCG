#ifndef DUNGEONLAYOUT_H
#define DUNGEONLAYOUT_H

#include <vector>
#include <list>

using namespace std;

const int OGDF_ROOM_SIZE = 30; //size of a rectangle generated by OGDF

struct room
{
    int id;
    bool edgeUp;
    bool edgeRight;
    bool edgeLeft;
    bool edgeDown;
};

struct coordRange
{
    int lowerBound;
    int upperBound;
};

class DungeonLayout
{
    public:
        DungeonLayout();
        virtual ~DungeonLayout();

        void addColumn(int x);
        void addRow(int y);

        void outputCoord();
        void asciiMap();

        void setUpGrid();
        void addRoom(int x, int y, int id);
        void addCorridor(int startX, int startY, int endX, int endY);

    protected:
    private:
        //sorted list of coordinates that start column and edge positions
        list<coordRange> xCoords;
        list<coordRange> yCoords;

        room** grid; //first coordinate is x second is y
        int findGridX(int x);
        int findGridY(int y);

};

#endif // DUNGEONLAYOUT_H
